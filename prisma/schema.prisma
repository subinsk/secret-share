// Define datasource and generator

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// User model for NextAuth.js
model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  secrets       Secret[]
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  hashedPassword   String?
}

// Secret model for sharing chits
model Secret {
  id            String   @id @default(cuid())
  secretText    String
  createdAt     DateTime @default(now())
  expiresAt     DateTime?
  isViewed      Boolean  @default(false)
  oneTimeAccess Boolean  @default(true)
  user          User?    @relation(fields: [userId], references: [id])
  userId        String?
  password      String?
}

// Session and Account models for NextAuth.js
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires   DateTime

  @@unique([identifier, token])
}